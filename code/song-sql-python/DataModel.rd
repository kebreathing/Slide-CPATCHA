数据库建模：
1. 业务流程梳理：
  a. 用户从浏览器输入指定IP后，python服务器的一系列响应（同数据库交互，获取拼图摘要信息）
  b. 用户获得不同拼图后，任意选择拼图并点击指定区域，进行子页面（进入子页面后需要获得拼图详细信息）
  c. 用户开始解锁（即确定子拼图正确方向，并拖动子拼图到特定位置）后，操作结果的存储
2. 业务流程中的数据模型（如有可能，建议画成实体关系图）：
  a. 拼图原图信息
    a-1. 拼图原图唯一标识符
    a-2. 拼图原图存储位置
    a-3. 拼图原图添加时间
    a-4. 拼图原图文件后缀
    a-5. 拼图原图文件大小
    a-6. 拼图原图尺寸
  b. 拼图处理图信息  (一个拼图原图可以有多个拼图处理图)
    b-1. 拼图处理图唯一标识符
    b-2. 拼图处理图-原图唯一标识（形成外键，不需要代码层的外键实现, FK = 拼图原图唯一标识符, a-1）
    b-3. 拼图处理图对应的正确子拼图唯一标识符（形成外键，不需要代码层的外键实现, FK = 拼图处理图对应的正确子拼图唯一标识符, c-1）
    b-4. 拼图处理图存储位置
    b-5. 拼图处理图添加时间
    b-6. 拼图处理图文件后缀
    b-7. 拼图处理图文件大小
    b-8. 拼图处理图尺寸
  c. 子拼图信息 （一个拼图处理图可以有多个子拼图，最多4个）
    c-1. 子拼图唯一标识符
    c-2. 子拼图对应拼图处理图唯一标识符（FK = b-1）
    c-3. 子拼图边界数据结构（考虑使用何种数据结构存储子拼图形状）
    c-4. 子拼图文件后缀
    c-5. 子拼图文件大小
  d. 拼图组合 （由一个拼图处理图 + 一个子拼图形成）
    d-1. 拼图组合唯一标识符
    d-2. 拼图组合中拼图处理图唯一标识符(b-1)
    d-3. 拼图组合中与拼图处理图对应的子拼图唯一标识符(c-1)
    d-4. 创建时间
  e. 拼图解锁信息 （记录拼图解锁信息）
    e-1. 拼图解锁信息唯一标识符
    e-2. 拼图组合唯一标识符(d-1) 暂修改为处理图id
    e-3. 拼图解锁尝试次数
    e-4. 拼图解锁成功次数
    e-5. 拼图解锁平均使用时间
  f. 用户-拼图解锁信息 （记录用户解锁拼图的信息）
    f-1. 用户-拼图解锁信息唯一标识符
    f-2. 用户唯一标识符（临时使用IP地址）
    f-3. 拼图组合唯一标识符（e-1） 暂修改为处理图id
    f-4. 解锁拼图开始时间
    f-5. 解锁拼图结束时间
    f-6. 解锁结果（正确 or 错误）
  g. 用户拼图解锁鼠标状态（记录用户解锁拼图时鼠标移动或点击）
    g-1. 鼠标状态唯一标识符
    g-2. 用户-拼图解锁信息唯一标识符（f-1）
    g-3. 鼠标点击次数（子拼图旋转次数）
    g-4. 鼠标按下时间点（拖动开始时间）
    g-5. 鼠标释放时间点（拖动结束时间）
    g-6. 鼠标处于按下持续时间（拖动持续时间）
    g-7. 鼠标运行轨迹存储文件（将鼠标的运行轨迹存储在文件中）
3. 数据模型对应的CRUD：
  a. 针对以上的数据模型，先完成基本的模型建立代码的书写
  b. 创建相关表结构之后，完成基本的CRUD
  c. 同 Python 服务器做联调，即 Python服务器要有相关的对外接口，开放给前端
